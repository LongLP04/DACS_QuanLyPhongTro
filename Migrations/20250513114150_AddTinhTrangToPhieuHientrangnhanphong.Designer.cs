// <auto-generated />
using System;
using DACS_QuanLyPhongTro.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DACS_QuanLyPhongTro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250513114150_AddTinhTrangToPhieuHientrangnhanphong")]
    partial class AddTinhTrangToPhieuHientrangnhanphong
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChiSoDienNuoc", b =>
                {
                    b.Property<int>("MaChiSo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiSo"));

                    b.Property<decimal>("ChiSoDienCu")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ChiSoDienMoi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ChiSoNuocCu")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ChiSoNuocMoi")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("DonGiaDien")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("DonGiaNuoc")
                        .HasColumnType("decimal(15,2)");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGhi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoDienTieuThu")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("SoNuocTieuThu")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("MaChiSo");

                    b.HasIndex("MaPhong");

                    b.ToTable("ChiSoDienNuoc");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChiTietPhieuDangKyDichVu", b =>
                {
                    b.Property<int>("MaDangKyDichVu")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTienDichVu")
                        .HasColumnType("decimal(15,2)");

                    b.HasKey("MaDangKyDichVu", "MaDichVu");

                    b.HasIndex("MaDichVu");

                    b.ToTable("ChiTietPhieuDangKyDichVu");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChuTro", b =>
                {
                    b.Property<int>("MaChuTro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChuTro"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gioitinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaChuTro");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("ChuTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.DichVu", b =>
                {
                    b.Property<int>("MaDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDichVu"));

                    b.Property<decimal>("DonGiaDichVu")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDichVu");

                    b.ToTable("DichVu");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HienTrangVatDung", b =>
                {
                    b.Property<int>("MaVatDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaVatDung"));

                    b.Property<int>("MaPhieuHienTrang")
                        .HasColumnType("int");

                    b.Property<string>("TenVatDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaVatDung");

                    b.HasIndex("MaPhieuHienTrang");

                    b.ToTable("HienTrangVatDung");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHoaDon")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHoaDon"));

                    b.Property<int?>("ChiSoDienNuocMaChiSo")
                        .HasColumnType("int");

                    b.Property<int?>("KhachThueMaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaChiSo")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TienDichVu")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TienDien")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TienNuoc")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TienPhong")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("ChiSoDienNuocMaChiSo");

                    b.HasIndex("KhachThueMaKhachThue");

                    b.HasIndex("MaChiSo");

                    b.HasIndex("MaKhachThue");

                    b.HasIndex("MaPhong");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HopDong", b =>
                {
                    b.Property<int>("MaHopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHopDong"));

                    b.Property<int?>("KhachThueMaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDungHopDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TienCoc")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHopDong");

                    b.HasIndex("KhachThueMaKhachThue");

                    b.HasIndex("MaKhachThue");

                    b.HasIndex("MaPhong");

                    b.ToTable("HopDong");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.KhachThue", b =>
                {
                    b.Property<int>("MaKhachThue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKhachThue"));

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gioitinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKhachThue");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("KhachThue");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.LichHen", b =>
                {
                    b.Property<int>("MaLichHen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichHen"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("GioHen")
                        .HasColumnType("time");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHen")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLichHen");

                    b.HasIndex("MaKhachThue");

                    b.HasIndex("MaPhong");

                    b.ToTable("LichHen");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MaKhachThue");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuDangKyDichVu", b =>
                {
                    b.Property<int>("MaDangKyDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDangKyDichVu"));

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDangKyDichVu");

                    b.HasIndex("MaKhachThue");

                    b.ToTable("PhieuDangKyDichVu");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuGhiNhanSuCo", b =>
                {
                    b.Property<int>("MaPhieuSuCo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuSuCo"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HienTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<string>("MoTaSuCo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGhiNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuSuCo");

                    b.HasIndex("MaKhachThue");

                    b.ToTable("PhieuGhiNhanSuCo");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuHienTrangNhanPhong", b =>
                {
                    b.Property<int>("MaPhieuHienTrang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuHienTrang"));

                    b.Property<string>("GhiChu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayNhanPhong")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhieuHienTrang");

                    b.HasIndex("MaKhachThue");

                    b.ToTable("PhieuHienTrangNhanPhong");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuThanhToan", b =>
                {
                    b.Property<int>("MaPhieuThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhieuThanhToan"));

                    b.Property<int>("MaHoaDon")
                        .HasColumnType("int");

                    b.Property<int>("MaPhuongThuc")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SoTienThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaPhieuThanhToan");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaPhuongThuc");

                    b.ToTable("PhieuThanhToan");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhongTro", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"));

                    b.Property<decimal>("DienTich")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("GiaThue")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Hinhanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaKhachThue")
                        .HasColumnType("int");

                    b.Property<int>("MaToaNha")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoPhong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tang")
                        .HasColumnType("int");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaKhachThue");

                    b.HasIndex("MaToaNha");

                    b.ToTable("PhongTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhuongThucThanhToan", b =>
                {
                    b.Property<int>("MaPhuongThuc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhuongThuc"));

                    b.Property<string>("TenPhuongThuc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaPhuongThuc");

                    b.ToTable("PhuongThucThanhToan");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ToaNha", b =>
                {
                    b.Property<int>("MaToaNha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaToaNha"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaChuTro")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenToaNha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongSoTang")
                        .HasColumnType("int");

                    b.HasKey("MaToaNha");

                    b.HasIndex("MaChuTro");

                    b.ToTable("ToaNha");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChiSoDienNuoc", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.PhongTro", "PhongTro")
                        .WithMany("ChiSoDienNuocs")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChiTietPhieuDangKyDichVu", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.PhieuDangKyDichVu", "PhieuDangKyDichVu")
                        .WithMany("ChiTietPhieuDangKyDichVus")
                        .HasForeignKey("MaDangKyDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.DichVu", "DichVu")
                        .WithMany("ChiTietPhieuDangKyDichVus")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("PhieuDangKyDichVu");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChuTro", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HienTrangVatDung", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.PhieuHienTrangNhanPhong", "PhieuHienTrangNhanPhong")
                        .WithMany()
                        .HasForeignKey("MaPhieuHienTrang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhieuHienTrangNhanPhong");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HoaDon", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ChiSoDienNuoc", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("ChiSoDienNuocMaChiSo");

                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", null)
                        .WithMany("HoaDons")
                        .HasForeignKey("KhachThueMaKhachThue");

                    b.HasOne("DACS_QuanLyPhongTro.Models.ChiSoDienNuoc", "ChiSoDienNuoc")
                        .WithMany()
                        .HasForeignKey("MaChiSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany()
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.PhongTro", "PhongTro")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiSoDienNuoc");

                    b.Navigation("KhachThue");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HopDong", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", null)
                        .WithMany("HopDongs")
                        .HasForeignKey("KhachThueMaKhachThue");

                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany()
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.PhongTro", "PhongTro")
                        .WithMany("HopDongs")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.KhachThue", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.LichHen", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany()
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.PhongTro", "PhongTro")
                        .WithMany()
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");

                    b.Navigation("PhongTro");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.Notification", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany()
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuDangKyDichVu", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany("PhieuDangKyDichVus")
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuGhiNhanSuCo", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany("PhieuGhiNhanSuCos")
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuHienTrangNhanPhong", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany("PhieuHienTrangNhanPhongs")
                        .HasForeignKey("MaKhachThue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuThanhToan", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.HoaDon", "HoaDon")
                        .WithMany("PhieuThanhToans")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.PhuongThucThanhToan", "PhuongThucThanhToan")
                        .WithMany("PhieuThanhToans")
                        .HasForeignKey("MaPhuongThuc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("PhuongThucThanhToan");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhongTro", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.KhachThue", "KhachThue")
                        .WithMany("PhongTros")
                        .HasForeignKey("MaKhachThue");

                    b.HasOne("DACS_QuanLyPhongTro.Models.ToaNha", "ToaNha")
                        .WithMany("PhongTros")
                        .HasForeignKey("MaToaNha")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachThue");

                    b.Navigation("ToaNha");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ToaNha", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ChuTro", "ChuTro")
                        .WithMany("ToaNhas")
                        .HasForeignKey("MaChuTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuTro");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DACS_QuanLyPhongTro.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChiSoDienNuoc", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ChuTro", b =>
                {
                    b.Navigation("ToaNhas");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.DichVu", b =>
                {
                    b.Navigation("ChiTietPhieuDangKyDichVus");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.HoaDon", b =>
                {
                    b.Navigation("PhieuThanhToans");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.KhachThue", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("HopDongs");

                    b.Navigation("PhieuDangKyDichVus");

                    b.Navigation("PhieuGhiNhanSuCos");

                    b.Navigation("PhieuHienTrangNhanPhongs");

                    b.Navigation("PhongTros");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhieuDangKyDichVu", b =>
                {
                    b.Navigation("ChiTietPhieuDangKyDichVus");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhongTro", b =>
                {
                    b.Navigation("ChiSoDienNuocs");

                    b.Navigation("HopDongs");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.PhuongThucThanhToan", b =>
                {
                    b.Navigation("PhieuThanhToans");
                });

            modelBuilder.Entity("DACS_QuanLyPhongTro.Models.ToaNha", b =>
                {
                    b.Navigation("PhongTros");
                });
#pragma warning restore 612, 618
        }
    }
}
