@model List<DACS_QuanLyPhongTro.Models.ChiSoDienNuoc>
@{
    ViewData["Title"] = "Danh Sách Chỉ Số Điện Nước";
    Layout = "~/Areas/ChuTroArea/Views/Shared/layoutAdminLTE.cshtml";
}



@{
    var totalRecords = Model?.Count() ?? 0;
    var thisMonthRecords = Model?.Count(c => c.NgayGhi.Month == DateTime.Now.Month && c.NgayGhi.Year == DateTime.Now.Year) ?? 0;
    var totalElectricity = Model?.Sum(c => c.SoDienTieuThu) ?? 0;
    var totalWater = Model?.Sum(c => c.SoNuocTieuThu) ?? 0;
}

<div class="content-header px-2 px-md-3 pt-1 pb-0">
@if (TempData["Error"] != null)
{
    <div class="modal fade" id="errorModal" tabindex="-1" aria-labelledby="errorModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-danger text-white">
                    <h5 class="modal-title" id="errorModalLabel">
                        <i class="fas fa-exclamation-triangle me-2"></i>Thông báo lỗi
                    </h5>
                    <a>
                        <h7>
                            Nhấn ESC để tắt
                        </h7>
                    </a>
                </div>
                <div class="modal-body" style="font-weight: bold;">
                    @TempData["Error"]
                </div>
                
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
            errorModal.show();
        });
    </script>
}

    <div class="d-flex align-items-center justify-content-between flex-wrap gap-2">
        <h2 class="h4 mb-0">@ViewData["Title"]</h2>
        <div class="d-flex align-items-center gap-2">
            <button type="button" class="btn btn-primary btn-sm" onclick="showPasswordModal('create')">
                <i class="fas fa-plus me-1"></i> Ghi Chỉ Số Điện Nước
            </button>
        </div>
    </div>
</div>

<!-- Summary widgets -->
<div class="row px-2 px-md-3 mt-3 g-3">
    <div class="col-12 col-sm-6 col-lg-3">
        <div class="small-box bg-gradient-primary mb-0">
            <div class="inner">
                <h3>@totalRecords</h3>
                <p>Tổng bản ghi</p>
            </div>
            <div class="icon"><i class="fas fa-list"></i></div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-3">
        <div class="small-box bg-gradient-info mb-0">
            <div class="inner">
                <h3>@thisMonthRecords</h3>
                <p>Tháng này</p>
            </div>
            <div class="icon"><i class="fas fa-calendar-alt"></i></div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-3">
        <div class="small-box bg-gradient-warning mb-0">
            <div class="inner">
                <h3>@totalElectricity</h3>
                <p>Tổng điện (kWh)</p>
            </div>
            <div class="icon"><i class="fas fa-bolt"></i></div>
        </div>
    </div>
    <div class="col-12 col-sm-6 col-lg-3">
        <div class="small-box bg-gradient-success mb-0">
            <div class="inner">
                <h3>@totalWater</h3>
                <p>Tổng nước (m³)</p>
            </div>
            <div class="icon"><i class="fas fa-tint"></i></div>
        </div>
    </div>
    <div class="col-12"><hr class="my-2"></div>
</div>

<div class="row px-2 px-md-3 g-3" id="csdnGrid">
    @foreach (var chiSo in Model)
    {
        <div class="col-12 col-sm-6 col-lg-4 col-xl-3 csdn-item" data-room="@chiSo.PhongTro?.SoPhong" data-date="@chiSo.NgayGhi.ToString("yyyy-MM-dd")">
            <div class="card shadow-sm border-0 h-100 csdn-card">
                <div class="card-body p-3">
                    <div class="d-flex align-items-start justify-content-between mb-2">
                        <div class="flex-grow-1 me-2">
                            <h5 class="card-title mb-1 fw-bold text-dark">
                                <i class="fas fa-bolt me-2 text-warning"></i>Phòng: @chiSo.PhongTro?.SoPhong
                            </h5>
                        </div>
                        <div class="avatar bg-gradient-primary text-white rounded-circle d-flex align-items-center justify-content-center flex-shrink-0" style="width:40px;height:40px;">
                            <i class="fas fa-tint fs-6"></i>
                        </div>
                    </div>
                    <div class="mb-2">
                        <div class="text-muted mb-2" style="margin-top:0.75rem; display:block;">
                                <i class="fas fa-calendar-alt me-1"></i><span class="fs-6">@chiSo.NgayGhi.ToString("dd/MM/yyyy")</span>
                        </div>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-primary-subtle text-primary border border-primary fs-6 px-2 py-1">
                            Điện tiêu thụ: <strong>@chiSo.SoDienTieuThu</strong>
                        </span>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-warning-subtle text-warning border border-warning fs-6 px-2 py-1">
                            Đơn giá điện: <strong>@chiSo.DonGiaDien.ToString("N0") VNĐ</strong>
                        </span>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-info-subtle text-info border border-info fs-6 px-2 py-1">
                            Nước tiêu thụ: <strong>@chiSo.SoNuocTieuThu</strong>
                        </span>
                    </div>
                    <div class="mb-2">
                        <span class="badge bg-success-subtle text-success border border-success fs-6 px-2 py-1">
                            Đơn giá nước: <strong>@chiSo.DonGiaNuoc.ToString("N0") VNĐ</strong>
                        </span>
                    </div>
                </div>
                <div class="card-footer bg-transparent border-0 pt-0 pb-3 px-3">
                    <div class="d-flex gap-2">
                        <a asp-action="Details" asp-route-id="@chiSo.MaChiSo" class="btn btn-outline-info btn-sm px-2 py-1">
                            <i class="fas fa-eye me-1"></i>Xem
                        </a>
                        <button type="button" class="btn btn-outline-warning btn-sm px-2 py-1" onclick="showPasswordModal('edit', '@chiSo.MaChiSo')">
                            <i class="fas fa-edit me-1"></i>Sửa
                        </button>
                        <button type="button" class="btn btn-outline-danger btn-sm px-2 py-1" onclick="showPasswordModal('delete', '@chiSo.MaChiSo')">
                            <i class="fas fa-trash me-1"></i>Xóa
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Password Confirmation Modal -->
<div class="modal fade" id="passwordModal" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="passwordModalLabel">Xác minh mật khẩu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="password" id="verifyPassword" class="form-control" placeholder="Nhập mật khẩu của bạn" />
                <div id="passwordError" class="text-danger mt-2" style="display:none;"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="submitPassword()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<style>
@section Scripts {
    <script>
        let actionType = null;
        let recordId = null;
        function showPasswordModal(type, id = null) {
            actionType = type;
            recordId = id;
            document.getElementById("verifyPassword").value = "";
            document.getElementById("passwordError").style.display = "none";
            var modal = new bootstrap.Modal(document.getElementById('passwordModal'));
            modal.show();
        }

        function submitPassword() {
            const password = document.getElementById("verifyPassword").value;
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

            fetch("/ChuTroArea/ChiSoDienNuoc/VerifyPassword", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "RequestVerificationToken": token
                },
                body: JSON.stringify({ password: password })
            })
            .then(res => res.json())
            .then(data => {
                if (data.success) {
                    if (actionType === "create") {
                        window.location.href = "/ChuTroArea/ChiSoDienNuoc/Create";
                    } else if (actionType === "edit" && recordId) {
                        window.location.href = `/ChuTroArea/ChiSoDienNuoc/Edit/${recordId}`;
                    } else if (actionType === "delete" && recordId) {
                        // Tạo form ẩn để submit delete request
                        const form = document.createElement('form');
                        form.method = 'POST';
                        form.action = `/ChuTroArea/ChiSoDienNuoc/Delete/${recordId}`;
                        const tokenInput = document.createElement('input');
                        tokenInput.type = 'hidden';
                        tokenInput.name = '__RequestVerificationToken';
                        tokenInput.value = token;
                        form.appendChild(tokenInput);
                        document.body.appendChild(form);
                        form.submit();
                    }
                } else {
                    const err = document.getElementById("passwordError");
                    err.innerText = data.message;
                    err.style.display = "block";
                }
            })
            .catch(err => console.error("Error:", err));
        }
    </script>
}
    .csdn-card {
        transition: transform .15s ease, box-shadow .15s ease;
        margin-bottom: 0;
        background-color: #f0f8ff;
    }
    .csdn-card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 24px rgba(0,0,0,.08);
    }
    .avatar {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
    }
    .csdn-card .card-title {
        font-size: 1.15rem;
        line-height: 1.3;
        color: #2c3e50;
    }
    .csdn-card .badge {
        font-size: 0.875rem;
        font-weight: 500;
        background-color: rgba(255, 255, 255, 0.8) !important;
        backdrop-filter: blur(10px);
    }
    .csdn-card .btn {
        margin-left: 5px;
        font-size: 0.875rem;
        font-weight: 500;
    }
    .csdn-card .card-body > * + * {
        margin-top: 1rem;
    }
    .csdn-item {
        margin-bottom: 1rem;
    }
    .csdn-item:nth-last-child(-n+4) {
        margin-bottom: 0;
    }
    .csdn-item:nth-child(4n+1) .csdn-card {
        background-color: #e3ffff;
    }
    .csdn-item:nth-child(4n+2) .csdn-card {
        background-color: #fff9f0;
    }
    .csdn-item:nth-child(4n+3) .csdn-card {
        background-color: #f0fff4;
    }
    .csdn-item:nth-child(4n+4) .csdn-card {
        background-color: #fff0f5;
    }
    .csdn-card .card-title,
    .csdn-card .text-muted,
    .csdn-card .text-secondary {
        color: #2c3e50 !important;
    }
</style>
