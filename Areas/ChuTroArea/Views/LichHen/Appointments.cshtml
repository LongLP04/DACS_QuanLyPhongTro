@model List<DACS_QuanLyPhongTro.Models.LichHen>

@{
    ViewData["Title"] = "Quản lý lịch hẹn";
    Layout = "/Areas/ChuTroArea/Views/Shared/layoutAdmin.cshtml";
}

<div class="container mt-5">
    <h2 class="mb-4">Danh sách lịch hẹn</h2>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Phòng</th>
                <th>Ngày hẹn</th>
                <th>Giờ hẹn</th>
                <th>Khách thuê</th>
                <th>Ghi chú</th>
                <th>Trạng thái</th>
                <th>Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var appointment in Model)
            {
                <tr>
                    <td>@appointment.PhongTro?.SoPhong</td>
                    <td>@appointment.NgayHen.ToString("dd/MM/yyyy")</td>
                    <td>@appointment.GioHen.ToString(@"hh\:mm")</td>
                    <td>@appointment.KhachThue?.HoTen</td>
                    <td>@appointment.GhiChu</td>
                    <td>@appointment.TrangThai</td>
                    <td>
                        @if (appointment.TrangThai == "Pending")
                        {
                            <button class="btn btn-success btn-sm" data-id="@appointment.MaLichHen">Chấp nhận</button>
                            <button class="btn btn-danger btn-sm" data-id="@appointment.MaLichHen">Từ chối</button>
                        }
                        else
                        {
                            <button class="btn btn-outline-danger btn-sm delete-btn" data-id="@appointment.MaLichHen">Xóa</button>
                        }
                    </td>

                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        document.addEventListener('click', function(event) {
            if (event.target.classList.contains('btn-success')) {
                var appointmentId = event.target.getAttribute('data-id');
                acceptAppointment(appointmentId);
            }

            if (event.target.classList.contains('btn-danger')) {
                var appointmentId = event.target.getAttribute('data-id');
                rejectAppointment(appointmentId);
            }

            if (event.target.classList.contains('delete-btn')) {
                var appointmentId = event.target.getAttribute('data-id');
                deleteAppointment(appointmentId);
            }
        });
    });

    function acceptAppointment(appointmentId) {
        if (confirm("Xác nhận chấp nhận lịch hẹn này?")) {
            fetch('@Url.Action("AcceptAppointment", "LichHen", new { area = "ChuTroArea" })', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ id: appointmentId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const row = document.querySelector(`[data-id="${appointmentId}"]`).closest('tr');
                    row.querySelector('td:nth-child(5)').textContent = 'Đã chấp nhận';
                    row.querySelector('.btn-success').disabled = true;
                    row.querySelector('.btn-danger').disabled = true;
                } else {
                    alert(data.message);
                }
            })
            .catch(() => alert('Có lỗi xảy ra!'));
        }
    }

    function rejectAppointment(appointmentId) {
        if (confirm("Xác nhận từ chối lịch hẹn này?")) {
            fetch('@Url.Action("RejectAppointment", "LichHen", new { area = "ChuTroArea" })', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ id: appointmentId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const row = document.querySelector(`[data-id="${appointmentId}"]`).closest('tr');
                    row.querySelector('td:nth-child(5)').textContent = 'Đã từ chối';
                    row.querySelector('.btn-success').disabled = true;
                    row.querySelector('.btn-danger').disabled = true;
                } else {
                    alert(data.message);
                }
            });
        }
    }

    function deleteAppointment(appointmentId) {
        if (confirm("Bạn có chắc chắn muốn xóa lịch hẹn này?")) {
            fetch('@Url.Action("DeleteAppointment", "LichHen", new { area = "ChuTroArea" })', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ id: appointmentId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const row = document.querySelector(`[data-id="${appointmentId}"]`).closest('tr');
                    row.remove();
                    alert(data.message);
                } else {
                    alert(data.message);
                }
            })
            .catch(() => alert('Có lỗi xảy ra khi xóa lịch hẹn!'));
        }
    }
</script>
