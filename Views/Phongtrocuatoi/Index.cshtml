@model DACS_QuanLyPhongTro.Models.PhongTro

@{
    ViewData["Title"] = Model?.SoPhong ?? "Phòng trọ của tôi";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model == null)
{
    <div class="alert alert-info">Bạn chưa thuê phòng trọ nào.</div>
}
else
{
    <div class="container position-relative" style="max-width: 2046px; margin: 0.5rem auto;">
        <!-- Ảnh full chiều ngang trong container max-width 2046px -->
        <img src="@Url.Content("~/" + (string.IsNullOrEmpty(Model.Hinhanh) ? "img/default-product.jpg" : Model.Hinhanh))"
             alt="Hình ảnh phòng"
             class="img-fluid rounded shadow-sm w-100 hover-effect"
             style="height: 80vh; object-fit: cover;" />

        <!-- Nút hamburger ở góc phải trên, dịch trái 10px -->
        <button id="menuToggle" aria-label="Toggle menu" title="Menu"
                class="hamburger-btn" type="button" aria-expanded="false" aria-controls="menuButtons">
            <span class="hamburger-bar"></span>
            <span class="hamburger-bar"></span>
            <span class="hamburger-bar"></span>
        </button>

        <!-- Menu ẩn / hiện -->
        <div id="menuButtons" class="overlay-buttons d-flex flex-column gap-3 p-3" aria-hidden="true">
            <a href="@Url.Action("DangKy", "DichVu")" class="btn btn-success btn-lg shadow">
                <i class="fas fa-clipboard-list mr-2"></i> Đăng ký dịch vụ
            </a>
            <a asp-controller="DichVu" asp-action="DanhSachDangKy" class="btn btn-primary btn-lg shadow">
                <i class="fas fa-file-alt mr-2"></i> Xem phiếu đăng ký dịch vụ
            </a>
            @* <a asp-controller="Notifications" asp-action="Index" class="btn btn-info btn-lg shadow"> *@
            @*     <i class="fas fa-bell mr-2"></i> Thông báo lịch hẹn *@
            @* </a> *@
            <a asp-controller="HopDong" asp-action="Details" asp-route-id="@Model.MaPhong" class="btn btn-warning btn-lg shadow">
                <i class="fas fa-file-signature mr-2"></i> Hợp đồng của tôi
            </a>

            <a asp-controller="ChiSoDienNuoc" asp-action="Index" class="btn btn-dark btn-lg shadow">
                <i class="fas fa-tachometer-alt mr-2"></i> Xem chỉ số điện nước
            </a>
            <a asp-controller="PhieuThanhToan" asp-action="Index" class="btn btn-secondary btn-lg shadow">
                <i class="fas fa-file-invoice-dollar mr-2"></i> Hóa đơn thanh toán
            </a>
            <a asp-controller="SuCo" asp-action="Index" class="btn btn-danger btn-lg shadow">
                <i class="fas fa-exclamation-triangle mr-2"></i> Báo sự cố
            </a>
            <a asp-controller="PhieuHienTrang" asp-action="XemPhieu" class="btn btn-info btn-lg shadow">
                <i class="fas fa-clipboard-check mr-2"></i> Xác nhận hiện trạng
            </a>
            <a asp-controller="Phongtrocuatoi" asp-action="IndexChat" class="btn btn-info btn-lg shadow">
                <i class="fas fa-comments mr-2"></i> Chat với chủ trọ
            </a>
        </div>

        <!-- 🔹 Thông tin phòng -->
        <div class="mt-4 info-detail p-4 shadow-sm rounded bg-white mx-auto" style="max-width: 1000px;">
            <h2 class="text-center mb-4">Thông tin chi tiết phòng trọ</h2>
            <h4 class="text-primary mb-3 font-weight-bold">Phòng @Model.SoPhong</h4>

            <div class="row mb-3"><div class="col-md-4"><strong>Giá thuê:</strong></div><div class="col-md-8 text-danger fw-bold">@Model.GiaThue.ToString("#,##0 VNĐ")</div></div>
            <div class="row mb-3"><div class="col-md-4"><strong>Diện tích:</strong></div><div class="col-md-8">@Model.DienTich m²</div></div>
            <div class="row mb-3"><div class="col-md-4"><strong>Tầng:</strong></div><div class="col-md-8">@Model.Tang</div></div>

            <hr class="my-4" />
            <div class="row mb-3"><div class="col-md-4"><strong>Thuộc tòa nhà:</strong></div><div class="col-md-8">@Model.ToaNha?.TenToaNha</div></div>
            <div class="row mb-3"><div class="col-md-4"><strong>Địa chỉ:</strong></div><div class="col-md-8">@Model.ToaNha?.DiaChi</div></div>

            @if (Model.ToaNha?.ChuTro != null)
            {
                <div class="row mb-3"><div class="col-md-4"><strong>Chủ trọ:</strong></div><div class="col-md-8">@Model.ToaNha.ChuTro.HoTen</div></div>
                <div class="row"><div class="col-md-4"><strong>SĐT:</strong></div><div class="col-md-8">@Model.ToaNha.ChuTro.SoDienThoai</div></div>
            }
        </div>
    </div>
}

<!-- 💬 Nút chat nổi -->
<div id="chatContainer">
    <button id="floatingChatBtn" title="Mở chat">
        <i class="fas fa-comments"></i>
        <span id="chatBadge" class="chat-badge d-none">0</span>
    </button>
</div>

<!-- 🔔 Popup thông báo tin nhắn -->
<div id="chatPopup" class="chat-popup toast" >
    <div class="toast-body position-relative">
        <!-- Nút đóng nằm sát góc phải -->
        <button type="button" class="btn-close position-absolute top-0 end-0 m-2" id="closePopup"></button>

        <div class="d-flex justify-content-between align-items-center mb-2 pe-4">
            <span class="fw-bold text-dark">
                <i class="fas fa-envelope-open-text me-2 text-primary"></i>
                <strong style="font-size: 1.4rem;">
                    Tin nhắn mới
                </strong>
            </span>
        </div>

        <p id="popupMsg" class="mb-3 text-secondary small">
            <strong>
                Bạn có tin nhắn mới từ chủ trọ: 
            </strong>
            <span class="fw-bold text-dark">
                @Model.ToaNha.ChuTro.HoTen
            </span>
        </p>

        <div class="d-flex justify-content-end gap-2">
            <button id="viewChatBtn" class="btn btn-sm btn-primary">
                <i class="fas fa-comments me-1"></i> Mở trang chat
            </button>
        </div>
    </div>
</div>

<!-- 💬 Khung chat nhỏ -->
<div class="card chat-card d-none" id="chatCard">
    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
        <span id="chatWith">Chủ trọ: @Model.ToaNha.ChuTro.HoTen</span>
        <div class="d-flex align-items-center gap-2">
            <button id="openFullChat" class="btn btn-light btn-sm text-primary fw-bold" title="Mở trang chat đầy đủ">
                <i class="fas fa-external-link-alt"></i>
            </button>
            <button type="button" class="btn-close" id="closeChat"></button>
        </div>
    </div>
    <div class="card-body" id="chatMessages"></div>
    <div class="card-footer">
        <form id="chatForm" class="d-flex gap-2">
            <input type="text" id="messageInput" class="form-control" placeholder="Nhập tin nhắn..." autocomplete="off" />
            <button type="submit" class="btn btn-primary">Gửi</button>
        </form>
    </div>
</div>

<!-- ================== CSS ================== -->
<style>
#floatingChatBtn {
    position: fixed;
    bottom: 25px;
    right: 25px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    font-size: 28px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    cursor: pointer;
    z-index: 2147483000;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
}

#floatingChatBtn.chat-alert {
    animation: chatBlink 1.2s infinite alternate, chatShake 0.6s ease-in-out infinite;
}

#floatingChatBtn .chat-badge {
    position: absolute;
    top: 6px;
    right: 6px;
    background: #ff2e63;
    color: white;
    font-size: 0.75rem;
    font-weight: bold;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
}

@@keyframes chatBlink {
    0%, 100% { background-color: #007bff; box-shadow: 0 0 10px #007bff; }
    50% { background-color: #ff4757; box-shadow: 0 0 20px #ff4757; }
}
@@keyframes chatShake {
    0%,100% { transform: translate(0,0); }
    25% { transform: translate(-2px,2px); }
    50% { transform: translate(2px,-2px); }
    75% { transform: translate(-2px,-3px); }
}

/* popup */
.chat-popup {
    position: fixed;
    bottom: 110px;
    right: 25px;
    width: 340px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 12px;
    box-shadow: 0 6px 25px rgba(0,0,0,0.25);
    padding: 18px;
    opacity: 0;
    transform: translateY(30px);
    pointer-events: none;
    transition: all 0.8s ease;
}

.chat-popup.show {
    opacity: 1;
    transform: translateY(0);
    pointer-events: all;
}
#chatContainer {
    position: fixed;
    bottom: 25px;
    right: 25px;
    width: 60px;
    height: 60px;
    z-index: 2147483000;
    display: flex;
    align-items: center;
    justify-content: center;
    pointer-events: none; /* không cản trở click */
}

#floatingChatBtn {
    position: relative; /* KHÔNG dùng fixed nữa */
    pointer-events: all; /* khôi phục click cho chính nó */
}
    .btn-sm{
        margin-right: 5px;
    }
    /* Nút hamburger dịch trái 10px, nhảy nhẹ, bóng phát sáng */
    .hamburger-btn {
        position: absolute;
        top: 20px;
        right: 30px; /* 20px + 10px dịch trái */
        width: 40px;
        height: 30px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        background: transparent;
        border: none;
        cursor: pointer;
        z-index: 15;
        animation: jump 2s ease-in-out infinite;
        box-shadow: 0 0 6px rgba(255, 255, 255, 0.7), 0 0 15px rgba(255, 255, 255, 0.5);
        border-radius: 6px;
    }

    #menuButtons a.btn {
        border-radius: 12px; /* Bo tròn góc */
        transition: background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
    }

        #menuButtons a.btn:hover {
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2); /* Đổ bóng mềm */
            transform: scale(1.05); /* Phóng to nhẹ khi hover */
        }

    .hamburger-bar {
        height: 4px;
        background-color: white;
        border-radius: 2px;
        transition: all 0.3s ease;
    }

    @@keyframes jump {
        0%, 100% {
            transform: translateY(0);
        }

        50% {
            transform: translateY(-6px);
        }
    }

    /* Menu */
    .overlay-buttons {
        position: absolute;
        top: 60px;
        right: 20px;
        z-index: 10;
        display: flex;
        flex-direction: column;
        gap: 12px;
        background-color: rgba(0, 0, 0, 0.55);
        padding: 20px;
        border-radius: 12px;
        max-width: 320px;
        max-height: 0;
        overflow: hidden;
        opacity: 0;
        transition: max-height 0.6s cubic-bezier(0.4, 0, 0.2, 1), opacity 0.6s ease;
    }

        .overlay-buttons.show {
            max-height: 1000px;
            opacity: 0.95;
        }

        .overlay-buttons .btn {
            font-size: 1.1rem;
            text-align: left;
            padding-left: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            white-space: nowrap;
        }

            .overlay-buttons .btn:hover {
                transform: scale(1.05);
                box-shadow: 0 6px 12px rgba(0, 0, 0, 0.5);
            }
        .img-fluid.hover-effect {
            transition: transform 0.4s ease, box-shadow 0.4s ease;
            cursor: pointer;
        }

            .img-fluid.hover-effect:hover {
                transform: translateY(5px) scale(1.02);
                box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);
            }

        .info-detail {
            background: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            color: #4a4a4a;
            line-height: 1.5;
        }

            .info-detail strong {
                color: #6c757d;
            }

            .info-detail h2 {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                font-weight: 700;
                color: #007bff;
                letter-spacing: 0.03em;
            }

        @@media (max-width: 576px) {
            .info-detail .row > div {
                margin-bottom: 8px;
            }
        }
    #floatingChatBtn {
        @* position: fixed; *@
        bottom: 25px;
        right: 25px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        font-size: 28px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
        cursor: pointer;
        z-index: 2147483000;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        will-change: transform;
    }
    #floatingChatBtn.chat-alert {
        animation: chatBlink 1.2s infinite alternate, chatShake 0.5s ease-in-out infinite;
    }
    #floatingChatBtn:hover {
        transform: scale(1.1);
    }

    .chat-popup {
        position: fixed;
        bottom: 110px;
        right: 25px;
        width: 340px;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 12px;
        box-shadow: 0 4px 20px rgba(0,0,0,0.25);
        padding: 16px 18px 14px 18px;
        animation: fadeInUp 0.5s ease;
    }
    .chat-popup.show {
        opacity: 1;
        transform: translateY(0);
        visibility: visible;
        pointer-events: all;
    }
    #chatCard {
        height: 400px;
        position: fixed;
        bottom: 100px;
        right: 25px;
        width: 380px;
        border-radius: 12px;
        box-shadow: 0 6px 20px rgba(0,0,0,0.25);
    }
    /* ==================== HIỆU ỨNG ICON CHAT ==================== */
@@keyframes chatBlink {
    0%, 100% { background-color: #007bff; box-shadow: 0 0 10px rgba(0,123,255,0.8); }
    50% { background-color: #ff4757; box-shadow: 0 0 25px rgba(255,71,87,0.9); }
}
@@keyframes chatShake {
    0%,100% { transform: translate(0,0); }
    25% { transform: translate(-2px,2px); }
    50% { transform: translate(2px,-2px); }
    75% { transform: translate(-2px,-3px); }
}

#floatingChatBtn.chat-alert {
    animation: chatBlink 1.2s infinite alternate, chatShake 0.5s ease-in-out infinite;
    position: relative;
}

/* 🔴 Badge hiển thị số tin nhắn chưa đọc */
#floatingChatBtn .chat-badge {
    position: absolute;
    top: 6px;
    right: 6px;
    background-color: #ff2e63;
    color: #fff;
    font-size: 0.75rem;
    font-weight: bold;
    border-radius: 50%;
    width: 22px;
    height: 22px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 0 6px rgba(0,0,0,0.4);
}

/* ==================== POPUP ==================== */
.chat-popup {
    position: fixed;
    bottom: 110px;
    right: 25px;
    width: 340px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 12px;
    box-shadow: 0 6px 25px rgba(0,0,0,0.25);
    padding: 18px;
    opacity: 0;
    transform: translateY(30px);
    pointer-events: none;
    transition: all 0.7s ease;
    z-index: 2147483647;
}

.chat-popup.show {
    opacity: 1;
    transform: translateY(0);
    pointer-events: all;
}

.popup-time {
    font-size: 0.8rem;
    color: #888;
    margin-top: 4px;
}

/* ==================== KHUNG CHAT ==================== */
.message-row {
    display: flex;
    margin-bottom: 8px;
}

.message-row.right {
    justify-content: flex-end;
}

.message-bubble {
    max-width: 70%;
    padding: 8px 12px;
    border-radius: 12px;
    font-size: 0.95rem;
    box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    position: relative;
}

.message-left {
    background-color: #f1f1f1;
    align-self: flex-start;
}

.message-right {
    background-color: #d4edda;
    text-align: right;
    align-self: flex-end;
}

.message-time {
    font-size: 0.75rem;
    color: #888;
    margin-top: 2px;
}


</style>

<!-- ================== JS ================== -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', async () => {
    const chatCard = document.getElementById('chatCard');
    const chatMessages = document.getElementById('chatMessages');
    const messageInput = document.getElementById('messageInput');
    const chatPopup = document.getElementById('chatPopup');
    const floatingChatBtn = document.getElementById('floatingChatBtn');
    const closePopup = document.getElementById('closePopup');
    const closeChat = document.getElementById('closeChat');
    const viewChatBtn = document.getElementById('viewChatBtn');
    const openFullChat = document.getElementById('openFullChat');

    const landlordId = '@Model.ToaNha.ChuTro.ApplicationUserId';
    const landlordName = '@(Model.ToaNha.ChuTro.HoTen)';
    const currentUserId = '@User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value';

    // 🚀 SignalR connection
    const connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
    try { await connection.start(); } catch (err) { console.error(err); }

    // 📩 Nhận tin nhắn
    // 📩 Nhận tin nhắn
connection.on("ReceiveMessage", (senderId, message) => {
    if (senderId === currentUserId) return;

    const now = new Date();
    const timeStr = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });

    // Popup thông báo
    if (chatCard.classList.contains('d-none')) {
        const popupMsg = document.getElementById('popupMsg');
        popupMsg.innerHTML = `
            Bạn có tin nhắn mới từ <b>${landlordName}</b>!<br>
            <span class="popup-time">${timeStr}</span>
        `;
        @* chatPopup.style.display = 'block'; *@
        chatPopup.classList.add('show');

        // 🔥 Hiệu ứng nhấp nháy cho icon chat
        floatingChatBtn.classList.add('chat-alert');

        // Giữ popup lâu hơn (8s)
        setTimeout(() => {
            chatPopup.classList.remove('show');
        }, 8000);
    }

    // Thêm tin nhắn vào khung chat
    const div = document.createElement('div');
    div.className = 'mb-2';
    div.innerHTML = `
        <span class='fw-bold text-primary'>${landlordName}:</span> ${message}
        <div class='text-muted small'>${timeStr}</div>
    `;
    chatMessages.appendChild(div);
    chatMessages.scrollTop = chatMessages.scrollHeight;
});


    // ✉️ Gửi tin nhắn
    document.getElementById('chatForm').addEventListener('submit', e => {
        e.preventDefault();
        const msg = messageInput.value.trim();
        if (!msg) return;

        connection.invoke("SendPrivateMessage", landlordId, msg);
        const div = document.createElement('div');
        div.className = 'mb-2 text-end';
        div.innerHTML = `<span class='fw-bold text-success'>Tôi:</span> ${msg}`;
        chatMessages.appendChild(div);
        chatMessages.scrollTop = chatMessages.scrollHeight;
        messageInput.value = '';
    });

    floatingChatBtn.addEventListener('click', () => {
        chatCard.classList.remove('d-none');
        chatPopup.style.display = 'none';
        floatingChatBtn.classList.remove('chat-alert');
    });
    closePopup.addEventListener('click', () => chatPopup.style.display = 'none');
    closeChat.addEventListener('click', () => chatCard.classList.add('d-none'));
    viewChatBtn.addEventListener('click', () => window.location.href = '@Url.Action("IndexChat","Phongtrocuatoi")');
    openFullChat.addEventListener('click', () => window.location.href = '@Url.Action("IndexChat","Phongtrocuatoi")');

    // Toggle menu hamburger
    document.getElementById('menuToggle').addEventListener('click', function () {
        var menu = document.getElementById('menuButtons');
        var expanded = this.getAttribute('aria-expanded') === 'true' || false;
        this.setAttribute('aria-expanded', !expanded);
        menu.classList.toggle('show');
    });
});
</script>
