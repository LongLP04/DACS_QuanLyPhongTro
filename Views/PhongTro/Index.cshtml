@model IEnumerable<DACS_QuanLyPhongTro.Models.PhongTro>

@{
    ViewData["Title"] = "Danh sách phòng trọ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            <div class="mb-3">
                <a href="@Url.Action("TimPhongGanToi", "PhongTro")" class="btn btn-primary">
                    <i class="fas fa-map-marker-alt mr-2"></i> Tìm trọ gần tôi
                </a>
            </div>

            <!-- Price Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">LỌC THEO GIÁ</span></h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterForm">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input price-filter" checked id="price-all" name="price" value="">
                        <label class="custom-control-label" for="price-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var range in ViewBag.PriceRanges)
                    {
                        var rangeText = range.Range.Max != null
                        ? $"{range.Range.Min:N0} - {range.Range.Max:N0} VNĐ"
                        : $"Trên {range.Range.Min:N0} VNĐ";
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input price-filter"
                                   id="price-@range.Range.Min"
                                   name="price"
                                   value="@range.Range.Min-@range.Range.Max">
                            <label class="custom-control-label" for="price-@range.Range.Min">@rangeText</label>
                            <span class="badge border font-weight-normal">@range.Count</span>
                        </div>
                    }
                </form>
            </div>
            <!-- Price End -->
            <!-- Area Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">LỌC THEO DIỆN TÍCH</span></h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterFormArea">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input area-filter" checked id="area-all" name="area" value="">
                        <label class="custom-control-label" for="area-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var range in ViewBag.AreaRanges)
                    {
                        var rangeText = range.Range.Max != null
                        ? $"{range.Range.Min:N2} - {range.Range.Max:N2} m²"
                        : $"Trên {range.Range.Min:N2} m²";
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input area-filter"
                                   id="area-@range.Range.Min"
                                   name="area"
                                   value="@range.Range.Min-@range.Range.Max">
                            <label class="custom-control-label" for="area-@range.Range.Min">@rangeText</label>
                            <span class="badge border font-weight-normal">@range.Count</span>
                        </div>
                    }
                </form>
            </div>
            <!-- Area End -->
            <!-- Đã bỏ phần Lọc theo Địa chỉ ở đây -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3 product-row">
                @foreach (var product in Model)
                {
                    <div class="col-lg-4 col-md-6 col-sm-6 pb-4 d-flex">
                        <div class="product-item bg-light shadow-sm rounded d-flex flex-column">
                            <div class="product-img position-relative overflow-hidden">
                                <img class="img-fluid w-100"
                                     src="@(string.IsNullOrEmpty(product.Hinhanh) ? Url.Content("~/img/default-product.jpg") : Url.Content("~/" + product.Hinhanh))"
                                     alt="@product.SoPhong" />

                                <div class="product-action">
                                    <a class="btn btn-outline-dark btn-square" href="javascript:void(0)" data-toggle="modal" data-target="#appointmentModal">
                                        <i class="fa fa-calendar"></i>
                                    </a>
                                    <a class="btn btn-outline-dark btn-square" href="@Url.Action("Details", "PhongTro", new { id = product.MaPhong })">
                                        <i class="fa fa-search"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="text-center py-4 product-info flex-grow-1 d-flex flex-column justify-content-center">
                                <a class="h6 text-decoration-none text-truncate" href="@Url.Action("Detail", "Shop", new { id = product.MaPhong })">@product.SoPhong</a>
                                <div class="d-flex align-items-center justify-content-center mt-2 flex-column">
                                    <h5>@product.GiaThue.ToString("#,##0 VNĐ")</h5>
                                    <span class="badge badge-pill badge-info mt-2" style="font-size: 0.9rem;">@product.TrangThai</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>

<style>
    .container-fluid > .row.px-xl-5 {
        margin-top: 1rem; /* cách navbar */
    }

    /* Container flex setup cho product-row */
    .product-row {
        display: flex;
        flex-wrap: wrap;
        margin-left: -15px;
        margin-right: -15px;
    }

        /* Padding đồng đều cho cột sản phẩm */
        .product-row > div[class*='col-'] {
            padding-left: 15px;
            padding-right: 15px;
            margin-bottom: 1.5rem;
            display: flex;
        }

    /* Khung sản phẩm */
    .product-item {
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        display: flex;
        flex-direction: column;
        overflow: hidden;
        width: 100%;
        height: 100%;
        transition: box-shadow 0.3s ease;
    }

        .product-item:hover {
            box-shadow: 0 6px 18px rgba(0,0,0,0.15);
        }

    /* Ảnh sản phẩm */
    .product-img {
        position: relative;
        width: 100%;
        padding-top: 75%; /* tỉ lệ 4:3 */
        overflow: hidden;
    }

        .product-img img {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
            border-top-left-radius: 12px;
            border-top-right-radius: 12px;
        }

        .product-img:hover img {
            transform: scale(1.05);
        }

    /* Phần thông tin sản phẩm */
    .product-info {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        justify-content: center;
        padding: 1.5rem;
    }

        .product-info a {
            font-weight: 600;
            color: #333;
            font-size: 1.1rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .product-info h5 {
            color: #e67e22;
            margin-top: 0.5rem;
        }

    /* Badge trạng thái */
    .badge-info {
        background-color: #17a2b8;
        color: white;
        padding: 0.35em 0.75em;
        border-radius: 10rem;
    }

    /* Nút thao tác trên ảnh */
    .product-action {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        background: rgba(255, 255, 255, 0.7);
        transition: opacity 0.3s ease;
    }

    .product-item:hover .product-action {
        opacity: 1;
    }

    .product-action a {
        display: inline-block;
        width: 40px;
        height: 40px;
        margin: 0 5px;
        padding: 7px 0;
        text-align: center;
        border-radius: 0;
        color: #333;
        font-size: 18px;
        background: #fff;
        border: 1px solid #ddd;
        transition: background-color 0.3s ease;
    }

        .product-action a:hover {
            background-color: #e67e22;
            color: white;
            border-color: #e67e22;
        }

    /* Responsive */
    @@media (max-width: 991px) {
        .product-row > div[class*='col-'] {
            padding-left: 10px;
            padding-right: 10px;
        }

        .product-info a {
            font-size: 1rem;
        }
    }
</style>

<script>
    // Script xử lý lọc sản phẩm
    document.addEventListener('DOMContentLoaded', function() {
        $('.price-filter, .area-filter').change(function() {
            if ($(this).attr('id').endsWith('-all')) {
                if ($(this).prop('checked')) {
                    $(`.${$(this).attr('class').split(' ')[1]}:not([id$=all])`).prop('checked', false);
                }
            } else {
                $(`#${$(this).attr('class').split(' ')[1].replace('filter', 'all')}`).prop('checked', false);
            }

            var selectedPrices = getSelectedValues('price-filter');
            var selectedAreas = getSelectedValues('area-filter');

            if (selectedPrices.length === 0) $('#price-all').prop('checked', true);
            if (selectedAreas.length === 0) $('#area-all').prop('checked', true);

            var url = new URL(window.location.href);
            url.searchParams.delete('minPrice');
            url.searchParams.delete('maxPrice');
            url.searchParams.delete('minArea');
            url.searchParams.delete('maxArea');

            if (!$('#price-all').prop('checked') && selectedPrices.length > 0) {
                var priceRange = selectedPrices[0].split('-');
                url.searchParams.set('minPrice', priceRange[0]);
                if (priceRange[1] !== 'null') {
                    url.searchParams.set('maxPrice', priceRange[1]);
                }
            }

            if (!$('#area-all').prop('checked') && selectedAreas.length > 0) {
                var areaRange = selectedAreas[0].split('-');
                url.searchParams.set('minArea', areaRange[0]);
                if (areaRange[1] !== 'null') {
                    url.searchParams.set('maxArea', areaRange[1]);
                }
            }

            window.location.href = url.toString();
        });

        function getSelectedValues(className) {
            var values = [];
            $('.' + className + ':checked').not('[id$=all]').each(function() {
                values.push($(this).val());
            });
            return values;
        }

        var urlParams = new URLSearchParams(window.location.search);

        if (urlParams.has('minPrice')) {
            $('#price-all').prop('checked', false);
            var min = urlParams.get('minPrice');
            var max = urlParams.get('maxPrice') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }

        if (urlParams.has('minArea')) {
            $('#area-all').prop('checked', false);
            var min = urlParams.get('minArea');
            var max = urlParams.get('maxArea') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }
    });
</script>
