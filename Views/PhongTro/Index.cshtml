@model IEnumerable<DACS_QuanLyPhongTro.Models.PhongTro>

@{
    ViewData["Title"] = "Danh sách phòng trọ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" asp-controller="Home" asp-action="Index">Trang chủ</a>
                <a class="breadcrumb-item text-dark" asp-controller="PhongTro" asp-action="Index">Phòng trọ</a>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Shop Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            <!-- Price Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    <i class="fas fa-dollar-sign"></i> LỌC THEO GIÁ
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterForm">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input price-filter" checked id="price-all" name="price" value="">
                        <label class="custom-control-label" for="price-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var range in ViewBag.PriceRanges)
                    {
                        var rangeText = range.Range.Max != null
                        ? $"{range.Range.Min:N0} - {range.Range.Max:N0} VNĐ"
                        : $"Trên {range.Range.Min:N0} VNĐ";
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input price-filter"
                                   id="price-@range.Range.Min"
                                   name="price"
                                   value="@range.Range.Min-@range.Range.Max">
                            <label class="custom-control-label" for="price-@range.Range.Min">@rangeText</label>
                            <span class="badge border font-weight-normal">@range.Count</span>
                        </div>
                    }
                </form>
            </div>
            <!-- Price End -->
            <!-- Area Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    <i class="fas fa-ruler-combined"></i> LỌC THEO DIỆN TÍCH
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterFormArea">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input area-filter" checked id="area-all" name="area" value="">
                        <label class="custom-control-label" for="area-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var range in ViewBag.AreaRanges)
                    {
                        var rangeText = range.Range.Max != null
                        ? $"{range.Range.Min:N2} - {range.Range.Max:N2} m²"
                        : $"Trên {range.Range.Min:N2} m²";
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input area-filter"
                                   id="area-@range.Range.Min"
                                   name="area"
                                   value="@range.Range.Min-@range.Range.Max">
                            <label class="custom-control-label" for="area-@range.Range.Min">@rangeText</label>
                            <span class="badge border font-weight-normal">@range.Count</span>
                        </div>
                    }
                </form>
            </div>
            <!-- Area End -->
            <!-- Status Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    <i class="fas fa-info-circle"></i> LỌC THEO TRẠNG THÁI
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterFormStatus">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input status-filter" checked id="status-all" name="status" value="">
                        <label class="custom-control-label" for="status-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var status in ViewBag.TrangThaiList)
                    {
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input status-filter"
                                   id="status-@status"
                                   name="status"
                                   value="@status">
                            <label class="custom-control-label" for="status-@status">@status</label>
                            <span class="badge border font-weight-normal">
                                @(Model.Count(p => p.TrangThai == status))
                            </span>
                        </div>
                    }
                </form>
            </div>
            <!-- Status End -->
            <!-- Address Start -->
            <h5 class="section-title position-relative text-uppercase mb-3">
                <span class="bg-secondary pr-3">
                    <i class="fas fa-map-marker-alt"></i> LỌC THEO ĐỊA CHỈ
                </span>
            </h5>
            <div class="bg-light p-4 mb-30">
                <form id="filterFormAddress">
                    <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                        <input type="radio" class="custom-control-input address-filter" checked id="address-all" name="address" value="">
                        <label class="custom-control-label" for="address-all">Tất cả</label>
                        <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                    </div>
                    @foreach (var address in ViewBag.AddressList)
                    {
                        <div class="custom-control custom-radio d-flex align-items-center justify-content-between mb-3">
                            <input type="radio" class="custom-control-input address-filter"
                                   id="address-@address"
                                   name="address"
                                   value="@address">
                            <label class="custom-control-label" for="address-@address">@address</label>
                            <span class="badge border font-weight-normal">
                                @(Model.Count(p => p.ToaNha.DiaChi == address))
                            </span>
                        </div>
                    }
                </form>
            </div>
            <!-- Address End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div class="ml-2">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Sắp xếp</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">Gần nhất</a>
                                    <a class="dropdown-item" href="#">Phổ biến</a>
                                    <a class="dropdown-item" href="#">Bán chạy nhất</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Danh sách sản phẩm -->
                @foreach (var product in Model)
                {
                    <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                        <div class="product-item bg-light mb-4">
                            <div class="product-img position-relative overflow-hidden">
                                <img class="img-fluid w-100" src="@(string.IsNullOrEmpty(product.Hinhanh) ? "/img/default-product.jpg" : product.Hinhanh)" alt="@product.SoPhong">
                                <div class="product-action">
                                    <a class="btn btn-outline-dark btn-square" href="javascript:void(0)" data-toggle="modal" data-target="appointmentModal" title="Đặt lịch">
                                        <i class="fas fa-calendar-alt"></i>
                                    </a>
                                    <a class="btn btn-outline-dark btn-square" href="@Url.Action("Details", "PhongTro", new { id = product.MaPhong })" title="Xem chi tiết">
                                        <i class="fas fa-search"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="text-center py-4">
                                <a class="h6 text-decoration-none text-truncate" href="@Url.Action("Detail", "Shop", new { id = product.MaPhong })">@product.SoPhong</a>
                                <div class="d-flex align-items-center justify-content-center mt-2">
                                    <h5>@product.GiaThue.ToString("#,##0 VNĐ")</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

<style>
    /* Thu nhỏ font size tiêu chí lọc, giảm padding */
    .custom-control-label {
        font-size: 0.9rem;
        cursor: pointer;
    }

    .custom-control-input {
        cursor: pointer;
    }

    /* Giảm kích thước badge */
    .badge {
        font-size: 0.75rem;
        padding: 0.25em 0.5em;
        min-width: 25px;
        text-align: center;
    }

    /* Giảm padding vùng filter */
    .bg-light.p-4 {
        padding: 1rem !important;
    }

    /* Bo tròn nhẹ các thẻ phòng */
    .product-item {
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        transition: box-shadow 0.3s ease;
        background: white;
    }

        .product-item:hover {
            box-shadow: 0 6px 18px rgba(0,0,0,0.15);
        }

    /* Nút action trong phòng trọ */
    .product-action a.btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        font-size: 1.1rem;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background-color 0.3s ease;
    }

        .product-action a.btn:hover {
            background-color: #007bff;
            color: white;
        }

    /* Tiêu đề lọc thêm icon */
    .section-title span {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        /* Icon style cho lọc */
        .section-title span i {
            font-size: 1.2rem;
            color: #6c757d;
        }
</style>

<script>
    // Xử lý lọc sản phẩm
    document.addEventListener('DOMContentLoaded', function() {
        $('.price-filter, .area-filter, .status-filter').change(function() {
            if ($(this).attr('id').endsWith('-all')) {
                if ($(this).prop('checked')) {
                    $(`.${$(this).attr('class').split(' ')[1]}:not([id$=all])`).prop('checked', false);
                }
            } else {
                $(`#${$(this).attr('class').split(' ')[1].replace('filter', 'all')}`).prop('checked', false);
            }

            var selectedPrices = getSelectedValues('price-filter');
            var selectedAreas = getSelectedValues('area-filter');
            var selectedStatus = getSelectedValues('status-filter');

            if (selectedPrices.length === 0) $('#price-all').prop('checked', true);
            if (selectedAreas.length === 0) $('#area-all').prop('checked', true);
            if (selectedStatus.length === 0) $('#status-all').prop('checked', true);

            var url = new URL(window.location.href);
            url.searchParams.delete('minPrice');
            url.searchParams.delete('maxPrice');
            url.searchParams.delete('minArea');
            url.searchParams.delete('maxArea');
            url.searchParams.delete('status');

            if (!$('#price-all').prop('checked') && selectedPrices.length > 0) {
                var priceRange = selectedPrices[0].split('-');
                url.searchParams.set('minPrice', priceRange[0]);
                if (priceRange[1] !== 'null') {
                    url.searchParams.set('maxPrice', priceRange[1]);
                }
            }

            if (!$('#area-all').prop('checked') && selectedAreas.length > 0) {
                var areaRange = selectedAreas[0].split('-');
                url.searchParams.set('minArea', areaRange[0]);
                if (areaRange[1] !== 'null') {
                    url.searchParams.set('maxArea', areaRange[1]);
                }
            }

            if (!$('#status-all').prop('checked') && selectedStatus.length > 0) {
                url.searchParams.set('status', selectedStatus.join(','));
            }

            window.location.href = url.toString();
        });

        function getSelectedValues(className) {
            var values = [];
            $('.' + className + ':checked').not('[id$=all]').each(function() {
                values.push($(this).val());
            });
            return values;
        }

        var urlParams = new URLSearchParams(window.location.search);

        if (urlParams.has('minPrice')) {
            $('#price-all').prop('checked', false);
            var min = urlParams.get('minPrice');
            var max = urlParams.get('maxPrice') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }

        if (urlParams.has('minArea')) {
            $('#area-all').prop('checked', false);
            var min = urlParams.get('minArea');
            var max = urlParams.get('maxArea') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }

        if (urlParams.has('status')) {
            $('#status-all').prop('checked', false);
            urlParams.get('status').split(',').forEach(function(status) {
                $('#status-' + status).prop('checked', true);
            });
        }
    });
</script>
