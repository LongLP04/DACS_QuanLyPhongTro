@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!-- Breadcrumb Start -->
<div class="container-fluid">
    <div class="row px-xl-5">
        <div class="col-12">
            <nav class="breadcrumb bg-light mb-30">
                <a class="breadcrumb-item text-dark" asp-controller="Home" asp-action="Index">Trang chủ</a>
                <a class="breadcrumb-item text-dark" asp-controller="PhongTro" asp-action="Index">Phòng trọ</a>
            </nav>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->

    <!-- Shop Start -->
    <div class="container-fluid">
        <div class="row px-xl-5">
            <!-- Shop Sidebar Start -->
            <div class="col-lg-3 col-md-4">
                <!-- Price Start -->
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">LỌC THEO GIÁ</span></h5>
                <div class="bg-light p-4 mb-30">
                    <form id="filterForm">
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input price-filter" checked id="price-all" value="">
                            <label class="custom-control-label" for="price-all">Tất cả</label>
                            <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                        </div>
                        @foreach (var range in ViewBag.PriceRanges)
                        {
                            var rangeText = range.Range.Max != null
                                ? $"{range.Range.Min:N0} - {range.Range.Max:N0} VNĐ"
                                : $"Trên {range.Range.Min:N0} VNĐ";
                            <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                <input type="checkbox" class="custom-control-input price-filter"
                                       id="price-@range.Range.Min"
                                       value="@range.Range.Min-@range.Range.Max">
                                <label class="custom-control-label" for="price-@range.Range.Min">@rangeText</label>
                                <span class="badge border font-weight-normal">@range.Count</span>
                            </div>
                        }
                    </form>
                </div>
                <!-- Price End -->

                <!-- Area Start -->
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">LỌC THEO DIỆN TÍCH</span></h5>
                <div class="bg-light p-4 mb-30">
                    <form id="filterFormArea">
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input area-filter" checked id="area-all" value="">
                            <label class="custom-control-label" for="area-all">Tất cả</label>
                            <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                        </div>
                        @foreach (var range in ViewBag.AreaRanges)
                        {
                            var rangeText = range.Range.Max != null
                                ? $"{range.Range.Min:N2} - {range.Range.Max:N2} m²"
                                : $"Trên {range.Range.Min:N2} m²";
                            <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                <input type="checkbox" class="custom-control-input area-filter"
                                       id="area-@range.Range.Min"
                                       value="@range.Range.Min-@range.Range.Max">
                                <label class="custom-control-label" for="area-@range.Range.Min">@rangeText</label>
                                <span class="badge border font-weight-normal">@range.Count</span>
                            </div>
                        }
                    </form>
                </div>
                <!-- Area End -->

                <!-- Status Start -->
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">LỌC THEO TRẠNG THÁI</span></h5>
                <div class="bg-light p-4 mb-30">
                    <form id="filterFormStatus">
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" class="custom-control-input status-filter" checked id="status-all" value="">
                            <label class="custom-control-label" for="status-all">Tất cả</label>
                            <span class="badge border font-weight-normal">@ViewBag.TotalProducts</span>
                        </div>
                        @foreach (var status in ViewBag.TrangThaiList)
                        {
                            <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                                <input type="checkbox" class="custom-control-input status-filter"
                                       id="status-@status"
                                       value="@status">
                                <label class="custom-control-label" for="status-@status">@status</label>
                                <span class="badge border font-weight-normal">
                                    @(Model.Count(p => p.TrangThai == status))
                                </span>
                            </div>
                        }
                    </form>
                </div>
                <!-- Status End -->
            </div>
            <!-- Shop Sidebar End -->


        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                            <button class="btn btn-sm btn-light"><i class="fa fa-th-large"></i></button>
                            <button class="btn btn-sm btn-light ml-2"><i class="fa fa-bars"></i></button>
                        </div>
                        <div class="ml-2">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Sắp xếp</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">Gần nhất</a>
                                    <a class="dropdown-item" href="#">Phổ biến</a>
                                    <a class="dropdown-item" href="#">Bán chạy nhất</a>
                                </div>
                            </div>
                            <div class="btn-group ml-2">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Hiển thị</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">10</a>
                                    <a class="dropdown-item" href="#">20</a>
                                    <a class="dropdown-item" href="#">30</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @* Danh sách sản phẩm *@
                @model IEnumerable<DACS_QuanLyPhongTro.Models.PhongTro>

                <!-- Danh sách sản phẩm -->
                <!-- Danh sách sản phẩm -->
                <style>
                    .product-img {
                        position: relative;
                        overflow: hidden;
                        padding-top: 100%;
                    }

                        .product-img img {
                            position: absolute;
                            top: 0;
                            left: 0;
                            height: 100%;
                            width: 100%;
                            object-fit: cover;
                        }

                    .product-action {
                        position: absolute;
                        width: 100%;
                        height: 100%;
                        top: 0;
                        left: 0;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        transition: .5s;
                        background: rgba(255, 255, 255, 0.7);
                        opacity: 0;
                    }

                        .product-action a {
                            display: inline-block;
                            width: 40px;
                            height: 40px;
                            margin: 0 5px;
                            padding: 7px 0;
                            text-align: center;
                            border-radius: 0;
                        }

                    .product-item:hover .product-action {
                        opacity: 1;
                    }

                    .size-options {
                        display: flex;
                        flex-wrap: wrap;
                        gap: 10px;
                    }

                    .size-radio {
                        display: none;
                    }

                    .size-label {
                        padding: 10px 15px;
                        border: 2px solid #ccc;
                        border-radius: 5px;
                        cursor: pointer;
                        font-size: 16px;
                        background-color: #fff;
                        transition: all 0.3s ease;
                    }

                    .size-radio:checked + .size-label {
                        background-color: black;
                        color: white;
                        border-color: black;
                    }

                    .quantity-box {
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        gap: 5px;
                    }

                    .small-input {
                        width: 50px;
                        height: 35px;
                        text-align: center;
                        font-size: 16px;
                        padding: 5px;
                        border: 1px solid #ccc;
                        border-radius: 5px;
                    }

                    .btn-black {
                        background-color: black !important;
                        color: white !important;
                        border: none;
                        width: 35px;
                        height: 35px;
                        font-size: 20px;
                        text-align: center;
                        line-height: 30px;
                        border-radius: 5px;
                    }

                        .btn-black:hover {
                            background-color: #333 !important;
                        }
                </style>
                @{
                    var favouriteProducts = ViewBag.FavouriteProducts as List<int> ?? new List<int>(); // Nhận danh sách ID sản phẩm yêu thích
                }
                @*danh sách sản phẩm begin *@
                <!-- Danh sách sản phẩm -->
                @foreach (var product in Model)
                {
                    <div class="col-lg-4 col-md-6 col-sm-6 pb-1">
                        <div class="product-item bg-light mb-4">
                            <div class="product-img position-relative overflow-hidden">
                                <img class="img-fluid w-100" src="@(string.IsNullOrEmpty(product.Hinhanh) ? "/img/default-product.jpg" : product.Hinhanh)" alt="@product.SoPhong">
                                <div class="product-action">
                                    <a class="btn btn-outline-dark btn-square" href="javascript:void(0)" onclick="showQuickAddToCart(@product.MaPhong)">
                                        <i class="fa fa-shopping-cart"></i>
                                    </a>
                                    <a class="btn btn-outline-dark btn-square" href="javascript:void(0)" onclick="toggleFavourite(@product.MaPhong)">
                                        <i class="far fa-heart"></i>
                                    </a>
                                    <a class="btn btn-outline-dark btn-square" href="@Url.Action("Details", "PhongTro", new { id = product.MaPhong })">
                                        <i class="fa fa-search"></i>
                                    </a>
                                </div>
                            </div>
                            <div class="text-center py-4">
                                <a class="h6 text-decoration-none text-truncate" href="@Url.Action("Detail", "Shop", new { id = product.MaPhong })">@product.SoPhong</a>
                                <div class="d-flex align-items-center justify-content-center mt-2">
                                    <h5>@product.GiaThue.ToString("#,##0 VNĐ")</h5>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Modal cho sản phẩm -->
                    <div class="modal fade" id="quickAddToCartModal_@product.MaPhong" tabindex="-1" role="dialog" aria-labelledby="quickAddToCartModalLabel_@product.MaPhong" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="quickAddToCartModalLabel_@product.MaPhong">Chọn size - Phòng @product.SoPhong</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    

                                    <p id="modalStockQuantity_@product.MaPhong" class="text-success mt-3">
                                        <strong>Số lượng có sẵn: </strong>
                                        <span id="modalAvailableStock_@product.MaPhong">0</span>
                                    </p>

                                    <div class="form-group mt-3">
                                        <label for="modalQuantityInput_@product.MaPhong"><strong>Số lượng:</strong></label>
                                        <div class="input-group justify-content-center quantity-box">
                                            <button class="btn btn-black" type="button" onclick="changeModalQuantity(@product.MaPhong, -1)">−</button>
                                            <input type="number" id="modalQuantityInput_@product.MaPhong" class="form-control text-center mx-2 small-input" value="1" min="1">
                                            <button class="btn btn-black" type="button" onclick="changeModalQuantity(@product.MaPhong, 1)">+</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
                                    <button type="button" class="btn btn-primary" onclick="addToCartFromModal(@product.MaPhong)">Thêm vào giỏ hàng</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <!-- Danh sách sản phẩm end -->


                @*  danh sách sản phẩm end *@

            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->

<script>
    

    // Xử lý lọc sản phẩm
    document.addEventListener('DOMContentLoaded', function() {
        // Xử lý khi checkbox được click
        $('.price-filter, .area-filter, .status-filter').change(function() {
            // Xử lý checkbox "Tất cả"
            if ($(this).attr('id').endsWith('-all')) {
                if ($(this).prop('checked')) {
                    // Nếu "Tất cả" được chọn, bỏ chọn các checkbox khác trong cùng nhóm
                    $(`.${$(this).attr('class').split(' ')[1]}:not([id$=all])`).prop('checked', false);
                }
            } else {
                // Nếu chọn một checkbox khác, bỏ chọn "Tất cả"
                $(`#${$(this).attr('class').split(' ')[1].replace('filter', 'all')}`).prop('checked', false);
            }

            // Lấy các giá trị đã chọn
            var selectedPrices = getSelectedValues('price-filter');
            var selectedAreas = getSelectedValues('area-filter');
            var selectedStatus = getSelectedValues('status-filter');

            // Nếu không có gì được chọn trong một nhóm, chọn "Tất cả"
            if (selectedPrices.length === 0) $('#price-all').prop('checked', true);
            if (selectedAreas.length === 0) $('#brand-all').prop('checked', true);
            if (selectedStatus.length === 0) $('#size-all').prop('checked', true);

            // Xây dựng URL với các tham số lọc
            var url = new URL(window.location.href);
            url.searchParams.delete('minPrice');
            url.searchParams.delete('maxPrice');
            url.searchParams.delete('minArea');
            url.searchParams.delete('maxArea');
            url.searchParams.delete('status');

            // Thêm các tham số lọc vào URL
            if (!$('#price-all').prop('checked') && selectedPrices.length > 0) {
                var priceRange = selectedPrices[0].split('-');
                url.searchParams.set('minPrice', priceRange[0]);
                if (priceRange[1] !== 'null') {
                    url.searchParams.set('maxPrice', priceRange[1]);
                }
            }

            if (!$('#area-all').prop('checked') && selectedAreas.length > 0) {
                var areaRange = selectedAreas[0].split('-');
                url.searchParams.set('minArea', areaRange[0]);
                if (areaRange[1] !== 'null') {
                    url.searchParams.set('maxArea', areaRange[1]);
                }
            }

            if (!$('#status-all').prop('checked') && selectedStatus.length > 0) {
                url.searchParams.set('status', selectedStatus.join(','));
            }

           

            // Chuyển hướng đến URL mới
            window.location.href = url.toString();
        });

        // Hàm lấy các giá trị đã chọn
        function getSelectedValues(className) {
            var values = [];
            $('.' + className + ':checked').not('[id$=all]').each(function() {
                values.push($(this).val());
            });
            return values;
        }

        // Đánh dấu các checkbox dựa trên URL hiện tại
        var urlParams = new URLSearchParams(window.location.search);

        if (urlParams.has('minPrice')) {
            $('#price-all').prop('checked', false);
            var min = urlParams.get('minPrice');
            var max = urlParams.get('maxPrice') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }

        if (urlParams.has('minArea')) {
            $('#area-all').prop('checked', false);
            var min = urlParams.get('minArea');
            var max = urlParams.get('maxArea') || 'null';
            $(`input[value="${min}-${max}"]`).prop('checked', true);
        }

        if (urlParams.has('status')) {
            $('#status-all').prop('checked', false);
            urlParams.get('status').split(',').forEach(function(status) {
                $('#status-' + status).prop('checked', true);
            });
        }

    });
</script>

