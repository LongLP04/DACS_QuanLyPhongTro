@model DACS_QuanLyPhongTro.Models.PhongTro
@{
    ViewData["Title"] = Model?.SoPhong ?? "Chi tiết phòng trọ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model == null)
{
    <h2 class="text-danger text-center mt-5">Phòng trọ không tồn tại!</h2>
    return;
}

<div class="container mt-5" style="max-width: 1630px; padding: 30px; border-radius: 15px; box-shadow: 0 0 15px rgba(0,0,0,0.1);">
    <div class="row">
        <!-- Ảnh phòng -->
        <div class="col-lg-9 mb-4 d-flex justify-content-center align-items-center">
            <img src="@(!string.IsNullOrEmpty(Model.Hinhanh) ? Url.Content("~/" + Model.Hinhanh) : Url.Content("~/img/default-product.jpg"))"
                 alt="Hình ảnh phòng @Model.SoPhong"
                 style="width: 1011px; max-height: 512px; object-fit: cover; border-radius: 1.5rem; box-shadow: 0 4px 12px rgba(0,0,0,0.1);" />
        </div>

        <!-- Thông tin phòng -->
        <div class="col-lg-3 d-flex flex-column justify-content-between">
            <div>
                <h2 class="mb-4 text-primary font-weight-bold">Phòng @Model.SoPhong</h2>

                <p><strong>Giá thuê:</strong> <span class="text-danger font-weight-bold">@Model.GiaThue.ToString("#,##0 VNĐ")</span></p>
                <p><strong>Diện tích:</strong> @Model.DienTich m²</p>
                <p><strong>Tầng:</strong> @(Model.Tang.ToString() ?? "Không rõ")</p>
                <p><strong>Trạng thái:</strong> <span class="badge badge-info p-2">@Model.TrangThai</span></p>
                <p><strong>Mô tả:</strong> @Model.MoTa</p>

                <hr />

                <p><strong>Thuộc tòa nhà:</strong> @Model.ToaNha?.TenToaNha</p>
                <p><strong>Địa chỉ tòa nhà :</strong> @Model.ToaNha?.DiaChi</p>

                <!-- Link đơn giản tới Google Maps với tọa độ -->
                @if (!string.IsNullOrEmpty(Model.ToaNha?.ViTri))
                {
                    <a href="https://www.google.com/maps/search/?api=1&query=@Model.ToaNha.ViTri" target="_blank" class="btn btn-info btn-md rounded-pill d-flex align-items-center px-3 py-1">
                        <i class="fas fa-map-marker-alt mr-2"></i> Xem vị trí trên Google Maps
                    </a>
                }

                @if (Model.ToaNha?.ChuTro != null)
                {
                    <p><strong>Chủ trọ:</strong> @Model.ToaNha.ChuTro.HoTen</p>
                    <p><strong>Số điện thoại:</strong> @Model.ToaNha.ChuTro.SoDienThoai</p>
                }
            </div>

            <div class="mt-4 d-flex gap-2 flex-wrap align-items-center">
                <a asp-controller="PhongTro" asp-action="Index" class="btn btn-secondary btn-md rounded-pill d-flex align-items-center px-3 py-1">
                    <i class="fas fa-arrow-left mr-2"></i> Quay lại danh sách
                </a>
                <button type="button"
                        id="btnDatLichHen"
                        class="btn btn-primary btn-md rounded-pill d-flex align-items-center px-3 py-1"
                        data-toggle="modal" data-target="#appointmentModal"
                @(Model.TrangThai == "Đã Thuê" ? "disabled title='Phòng đã được thuê, không thể đặt lịch.'" : "")>
                    <i class="fas fa-calendar-alt mr-2"></i> Đặt lịch hẹn
                </button>


            </div>
        </div>
    </div>
</div>

<!-- Modal Đặt lịch hẹn -->
<div class="modal fade" id="appointmentModal" tabindex="-1" role="dialog" aria-labelledby="appointmentModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content rounded shadow-sm">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="appointmentModalLabel">Đặt lịch hẹn xem phòng @Model.SoPhong</h5>
                <button type="button" class="close text-white" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="appointmentForm" novalidate>
                    <div class="form-group">
                        <label for="appointmentDate">Ngày hẹn</label>
                        <input type="date" class="form-control" id="appointmentDate" required />
                    </div>
                    <div class="form-group">
                        <label for="appointmentTime">Giờ hẹn</label>
                        <input type="time" class="form-control" id="appointmentTime" required />
                    </div>
                    <div class="form-group">
                        <label for="note">Ghi chú (tùy chọn)</label>
                        <textarea class="form-control" id="note" rows="3"></textarea>
                    </div>
                    <input type="hidden" id="phongTroId" value="@Model.MaPhong" />
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary btn-sm" onclick="submitAppointment()">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
           
        function initMap() {
            var geocoder = new google.maps.Geocoder();

            var viTri = '@(Model.ToaNha?.ViTri ?? "")';
            if (viTri) {
                var latlngStr = viTri.split(',');
                if (latlngStr.length === 2) {
                    var lat = parseFloat(latlngStr[0]);
                    var lng = parseFloat(latlngStr[1]);
                    var latlng = { lat: lat, lng: lng };

                    geocoder.geocode({ location: latlng }, function (results, status) {
                        if (status === 'OK') {
                            if (results[0]) {
                                document.getElementById('reverseAddress').textContent = results[0].formatted_address;
                            } else {
                                document.getElementById('reverseAddress').textContent = "Không tìm thấy địa chỉ";
                            }
                        } else {
                            document.getElementById('reverseAddress').textContent = "Lỗi khi lấy địa chỉ: " + status;
                        }
                    });
                } else {
                    document.getElementById('reverseAddress').textContent = "Tọa độ không hợp lệ";
                }
            } else {
                document.getElementById('reverseAddress').textContent = "Không có tọa độ";
            }
        }
        function submitAppointment() {
            var date = document.getElementById("appointmentDate").value;
            var time = document.getElementById("appointmentTime").value;
            var note = document.getElementById("note").value;
            var phongTroId = document.getElementById("phongTroId").value;

            if (!date || !time) {
                alert("Vui lòng chọn ngày và giờ hẹn!");
                return;
            }

            fetch('/PhongTro/BookAppointment', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    MaPhong: phongTroId,
                    NgayHen: date,
                    GioHen: time,
                    GhiChu: note
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Đặt lịch hẹn thành công! Bạn sẽ được thông báo khi chủ nhà xác nhận.");
                    $('#appointmentModal').modal('hide'); // Đóng modal nếu bạn dùng Bootstrap + jQuery
                } else {
                    alert("Lỗi: " + data.message);
                }
            })
            .catch(error => {
                console.error('Lỗi khi đặt lịch:', error);
                alert("Có lỗi xảy ra khi gửi yêu cầu đặt lịch hẹn.");
            });
        }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDKjse9i60p-i4Ld99JfraTgjMsoMBGjX4&callback=initMap" async defer></script>
}


<style>
    .badge-info {
        background-color: #17a2b8;
        color: white;
        padding: 0.35em 0.75em;
        border-radius: 50rem;
        font-size: 0.9rem;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        color: #fff;
        transition: background-color 0.3s ease;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
            border-color: #545b62;
            color: #fff;
        }

    .btn-primary {
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #004085;
        }
</style>